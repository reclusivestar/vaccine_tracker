[{"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\index.js":"1","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\App.js":"2","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\reportWebVitals.js":"3","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Vaccine\\Vaccine.jsx":"4","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Map.jsx":"5","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\components.js":"6","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Time.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":134,"mtime":1610503131128,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":5525,"mtime":1611200014524,"results":"12","hashOfConfig":"9"},{"size":11787,"mtime":1611199989827,"results":"13","hashOfConfig":"9"},{"size":4746,"mtime":1610923666397,"results":"14","hashOfConfig":"9"},{"size":5706,"mtime":1611199734593,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"vi5i8c",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\index.js",[],["32","33"],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\App.js",[],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\reportWebVitals.js",[],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Vaccine\\Vaccine.jsx",["34","35","36","37"],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Map.jsx",["38","39","40"],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\components.js",[],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Time.jsx",["41"],"import { useState, useEffect } from 'react';\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport { SliderRail, Handle, Track, Tick } from \"./components\"; // example render components - source below\r\nimport { startOfToday, format } from \"date-fns\";\r\nimport { scaleTime } from \"d3-scale\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nconst sliderStyle = {\r\n  position: \"relative\",\r\n  width: \"100%\"\r\n};\r\n\r\nfunction formatTick(ms) {\r\n  return format(new Date(ms), \"MMM dd\");\r\n}\r\n\r\nconst timeStep = 1000 * 60 * 1440;\r\n\r\nexport default function Time(props) {\r\n\r\n    const today = startOfToday();\r\n\r\n    const [selected, setSelected] = useState(today);\r\n    const [min, setMin] = useState(new Date(\"12/14/2020\"));\r\n    const [max, setMax] = useState(today);\r\n\r\n\r\n    const isTablet = useMediaQuery({ query: `(max-width: 1400px)` });\r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n   \r\n\r\n    function onChange([ms]) {\r\n        setSelected(new Date(ms));\r\n        props.selectDate(format(new Date(ms), \"MM/dd/yyyy\"));\r\n    };\r\n\r\n    function renderDateTime(date) {\r\n        return (\r\n        <div\r\n            style={{\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontFamily: \"Arial\",\r\n            marginTop: isMobile? \"-15%\" : \"\"\r\n            }}\r\n        >\r\n        {isMobile? \r\n        <div>\r\n             <div style={{ fontSize: 15, paddingBottom: \"1em\" }}>Date Selected: <b>{format(date, \"MM/dd/yyyy\")}</b></div>\r\n                <div style={{paddingBottom: \"1em\", display: \"flex\", flexDirection: isMobile? \"column\" : \"\", justifyContent: \"center\"}}>\r\n                <label style={{padding: \"0.1em\"}}>Set Start Date: </label>\r\n                <DatePicker\r\n                    selected={min}\r\n                    onSelect={(date) => setMin(date)} //when day is clicked\r\n                // onChange={handleDateChange} //only when value has changed\r\n                />\r\n                <div style={{paddingTop: \"1em\"}}></div>\r\n                <label style={{padding: \"0.1em\"}}>Set End Date: </label>\r\n                <DatePicker\r\n                    selected={max}\r\n                    onSelect={(date) => setMax(date)} //when day is clicked\r\n                // onChange={handleDateChange} //only when value has changed\r\n                />\r\n                </div>\r\n            </div>\r\n            :\r\n            <div>\r\n                <div style={{paddingBottom: \"1em\", display: \"flex\", flexDirection: isMobile? \"column\" : \"\", justifyContent: \"center\"}}>\r\n                    <label style={{padding: \"0.1em\"}}>Set Start Date: </label>\r\n                    <DatePicker\r\n                        selected={min}\r\n                        onSelect={(date) => setMin(date)} //when day is clicked\r\n                    // onChange={handleDateChange} //only when value has changed\r\n                    />\r\n                    <label style={{padding: \"0.1em\", marginLeft: \"2em\"}}>Set End Date: </label>\r\n                    <DatePicker\r\n                        selected={max}\r\n                        onSelect={(date) => setMax(date)} //when day is clicked\r\n                    // onChange={handleDateChange} //only when value has changed\r\n                    />\r\n                </div>\r\n                <div style={{ fontSize: 15 }}>Date Selected: <b>{format(date, \"MM/dd/yyyy\")}</b></div>\r\n            </div>}\r\n        </div>\r\n        );\r\n    }\r\n\r\n    const days = parseInt((max - min) / (1000 * 60 * 60 * 24), 10);\r\n\r\n    const dateTicks = scaleTime()\r\n      .domain([min, max])\r\n      .ticks(days > 50 || isTablet? 7 : days)\r\n      .map((d) => +d);\r\n\r\n    return (\r\n      <div>\r\n        {isMobile? \"\" : renderDateTime(selected)}\r\n        <div style={{ margin: \"5%\", height: 120, width: \"90%\" }}>\r\n          <Slider\r\n            mode={1}\r\n            step={timeStep}\r\n            domain={[+min, +max]}\r\n            rootStyle={sliderStyle}\r\n            onChange={onChange}\r\n            values={[+selected]}\r\n          >\r\n            <Rail>\r\n              {({ getRailProps }) => <SliderRail getRailProps={getRailProps} />}\r\n            </Rail>\r\n            <Handles>\r\n              {({ handles, getHandleProps }) => (\r\n                <div>\r\n                  {handles.map((handle) => (\r\n                    <Handle\r\n                      key={handle.id}\r\n                      handle={handle}\r\n                      domain={[+min, +max]}\r\n                      getHandleProps={getHandleProps}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </Handles>\r\n            <Tracks right={false}>\r\n              {({ tracks, getTrackProps }) => (\r\n                <div>\r\n                  {tracks.map(({ id, source, target }) => (\r\n                    <Track\r\n                      key={id}\r\n                      source={source}\r\n                      target={target}\r\n                      getTrackProps={getTrackProps}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </Tracks>\r\n            <Ticks values={dateTicks}>\r\n              {({ ticks }) => (\r\n                <div>\r\n                  {ticks.map((tick) => (\r\n                    <Tick\r\n                      key={tick.id}\r\n                      tick={tick}\r\n                      count={ticks.length}\r\n                      format={formatTick}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </Ticks>\r\n          </Slider>\r\n        </div>\r\n        {isMobile? renderDateTime(selected) : \"\"}\r\n      </div>\r\n    );\r\n}\r\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":35,"column":32,"nodeType":"48","messageId":"49","endLine":35,"endColumn":34},{"ruleId":"46","severity":1,"message":"47","line":41,"column":32,"nodeType":"48","messageId":"49","endLine":41,"endColumn":34},{"ruleId":"50","severity":1,"message":"51","line":49,"column":26,"nodeType":"52","messageId":"53","endLine":49,"endColumn":27},{"ruleId":"54","severity":1,"message":"55","line":94,"column":8,"nodeType":"56","endLine":94,"endColumn":10,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":92,"column":6,"nodeType":"56","endLine":92,"endColumn":18,"suggestions":"59"},{"ruleId":"54","severity":1,"message":"60","line":101,"column":6,"nodeType":"56","endLine":101,"endColumn":19,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":106,"column":6,"nodeType":"56","endLine":106,"endColumn":20,"suggestions":"63"},{"ruleId":"50","severity":1,"message":"64","line":1,"column":20,"nodeType":"52","messageId":"53","endLine":1,"endColumn":29},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'transformData'. Either include it or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has missing dependencies: 'filterDate', 'makeContinuous', and 'props.title'. Either include them or remove the dependency array.",["68"],"React Hook useEffect has missing dependencies: 'filterDate', 'makeContinuous', 'props.data', and 'selectedTime'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAllStates' needs the current value of 'selectedTime'.",["69"],"React Hook useEffect has missing dependencies: 'filterDate' and 'timeSeries'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAllStates' needs the current value of 'timeSeries'.",["70"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [transformData]",{"range":"79","text":"80"},"Update the dependencies array to be: [filterDate, makeContinuous, props.data, props.title]",{"range":"81","text":"82"},"Update the dependencies array to be: [filterDate, makeContinuous, props.data, props.title, selectedTime]",{"range":"83","text":"84"},"Update the dependencies array to be: [filterDate, selectedTime, timeSeries]",{"range":"85","text":"86"},[3408,3410],"[transformData]",[2840,2852],"[filterDate, makeContinuous, props.data, props.title]",[3115,3128],"[filterDate, makeContinuous, props.data, props.title, selectedTime]",[3252,3266],"[filterDate, selectedTime, timeSeries]"]