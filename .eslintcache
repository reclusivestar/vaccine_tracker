[{"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\index.js":"1","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\App.js":"2","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\reportWebVitals.js":"3","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Vaccine\\Vaccine.jsx":"4","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Map.jsx":"5","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\components.js":"6","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Time.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":134,"mtime":1610503131128,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":5234,"mtime":1611026823294,"results":"12","hashOfConfig":"9"},{"size":11583,"mtime":1611030929152,"results":"13","hashOfConfig":"9"},{"size":4746,"mtime":1610923666397,"results":"14","hashOfConfig":"9"},{"size":4433,"mtime":1611030970515,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"vi5i8c",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\index.js",[],["32","33"],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\App.js",[],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\reportWebVitals.js",[],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Vaccine\\Vaccine.jsx",["34","35","36","37"],"import React, { useState, useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\nimport axios from 'axios';\r\nimport Map from '../Map/Map';\r\nimport states from '../Map/states.json';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nexport default function Vaccine() {\r\n\r\n    const url = \"https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/raw_data/vaccine_data_us_state_timeline.csv\";\r\n    const definitions_url = \"https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/raw_data/data_dictionary.csv\";\r\n\r\n    const [allData, setAllData] = useState([]); //in time series\r\n    const [subject, setSubject] = useState(\"doses_admin_total\");\r\n    const [allTitles, setAllTitles] = useState([]);\r\n    const [allDefinitions, setAllDefinitions] = useState([]);\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    function extractTitles(allData) {\r\n        const titles = [];\r\n        allData.forEach(data => {\r\n            titles.push(data.title)\r\n        })\r\n        setAllTitles(titles);\r\n    }\r\n\r\n    function formatTitle(title){\r\n        if (title === \"people_total\")\r\n            return \"People Total 1st Dose\";\r\n\r\n        let newTitle = title.split('_');\r\n        newTitle.map((word, i) => {\r\n            if (word === \"alloc\")\r\n                newTitle[i] = \"allocated\";\r\n            if (word === \"admin\")\r\n                newTitle[i] = \"administered\";\r\n        })\r\n        newTitle.map((word, i) => {\r\n            newTitle[i] = word[0].toUpperCase() + word.substring(1);\r\n        })\r\n        return newTitle.join(' ');\r\n    }\r\n    \r\n    function transformData(raw){\r\n        let results = [];\r\n        for (const [key, _] of Object.entries(raw.data[0])) {\r\n            let field = {};\r\n            field[\"title\"] = key;\r\n            field[\"data\"] = [];\r\n            results.push(field);\r\n        }\r\n        // filter empty data for each key\r\n\r\n        for (let i = 4; i < results.length; i++){\r\n            raw.data.forEach(field => {\r\n                if (field[results[i].title] !== \"\" && field[results[i].title] !== undefined\r\n                 && field[results[i].title] !== \" \"){\r\n                    results[i].data.push([field[\"date\"], field[\"stabbr\"], field[results[i].title]]);\r\n                }\r\n            })\r\n        }\r\n        let valid_results = results.slice(4);\r\n        console.log(valid_results);\r\n        extractTitles(valid_results);\r\n        getDataByState(valid_results);\r\n    }\r\n\r\n    function transformDataDefinitions(csv){\r\n        let definitions = [];\r\n        csv.data.forEach(col => {\r\n            definitions.push(col);\r\n        });\r\n        setAllDefinitions(definitions.slice(4, definitions.length - 1));\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchCSV(){\r\n            const csv = await axios.get(url).then(response => \r\n                Papa.parse(response.data,\r\n                          { header: true }));\r\n            transformData(csv);\r\n        }\r\n        async function fetchDefinitions(){\r\n            const csv = await axios.get(definitions_url).then(response => \r\n                Papa.parse(response.data,\r\n                          { header: true }));\r\n            transformDataDefinitions(csv);\r\n        }\r\n        fetchCSV();\r\n        fetchDefinitions();\r\n    }, []);\r\n\r\n    function filterState(raw, state){\r\n        let latest = [];\r\n        raw.forEach(row => {\r\n            let field = {};\r\n            field[\"title\"] = row.title;\r\n            field[\"data\"] = [];\r\n            latest.push(field);\r\n        });\r\n        latest.forEach((field, i) => {\r\n            field.data = raw[i].data.filter(data => data[1] === state);\r\n        });\r\n        return latest;\r\n    };\r\n\r\n    function getDataByState(data){\r\n        let latest_all = [];\r\n        states.forEach(state => {\r\n            latest_all.push({\"id\" : state.id, \"val\" : state.val, data : filterState(data, state.id)});\r\n        });\r\n        setAllData(latest_all);\r\n    }\r\n\r\n    function getDefinition() {\r\n        let data = allDefinitions.filter(def => def.column_name === subject)[0];\r\n        if (data)\r\n            return data.definition;\r\n    }\r\n\r\n    function chooseSubject(){\r\n        return (\r\n            <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                <div style={{padding: \"1.4vw\"}}>\r\n                    <label for=\"titles\">Choose Data: </label>\r\n                    <select name=\"titles\" id=\"titles\" onChange={(e) => setSubject(e.target.value)} value={subject}>\r\n                    {allTitles.map(title => {\r\n                        return(\r\n                            <option value={title}>{formatTitle(title)}</option>\r\n                        )}\r\n                    )}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <h2 style={{fontWeight: \"lighter\"}}>{getDefinition()}</h2>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    console.log(allData);\r\n    console.log(subject);\r\n    return ( \r\n        <div style={{marginLeft: \"18%\", width: \"60%\"}}>\r\n            {chooseSubject()}\r\n            <Map data={allData} title={subject} setTooltipContent={setContent}/>\r\n            <ReactTooltip>{content}</ReactTooltip>\r\n        </div>\r\n    );\r\n}","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Map.jsx",["38","39","40"],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\components.js",[],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Time.jsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":32,"column":32,"nodeType":"47","messageId":"48","endLine":32,"endColumn":34},{"ruleId":"45","severity":1,"message":"46","line":38,"column":32,"nodeType":"47","messageId":"48","endLine":38,"endColumn":34},{"ruleId":"49","severity":1,"message":"50","line":46,"column":26,"nodeType":"51","messageId":"52","endLine":46,"endColumn":27},{"ruleId":"53","severity":1,"message":"54","line":91,"column":8,"nodeType":"55","endLine":91,"endColumn":10,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":88,"column":6,"nodeType":"55","endLine":88,"endColumn":18,"suggestions":"58"},{"ruleId":"53","severity":1,"message":"59","line":97,"column":6,"nodeType":"55","endLine":97,"endColumn":19,"suggestions":"60"},{"ruleId":"53","severity":1,"message":"61","line":102,"column":6,"nodeType":"55","endLine":102,"endColumn":20,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'transformData'. Either include it or remove the dependency array.","ArrayExpression",["65"],"React Hook useEffect has missing dependencies: 'filterDate', 'makeContinuous', and 'props.title'. Either include them or remove the dependency array.",["66"],"React Hook useEffect has missing dependencies: 'filterDate', 'makeContinuous', 'props.data', and 'selectedTime'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAllStates' needs the current value of 'selectedTime'.",["67"],"React Hook useEffect has missing dependencies: 'filterDate' and 'timeSeries'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAllStates' needs the current value of 'timeSeries'.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [transformData]",{"range":"77","text":"78"},"Update the dependencies array to be: [filterDate, makeContinuous, props.data, props.title]",{"range":"79","text":"80"},"Update the dependencies array to be: [filterDate, makeContinuous, props.data, props.title, selectedTime]",{"range":"81","text":"82"},"Update the dependencies array to be: [filterDate, selectedTime, timeSeries]",{"range":"83","text":"84"},[3281,3283],"[transformData]",[2669,2681],"[filterDate, makeContinuous, props.data, props.title]",[2944,2957],"[filterDate, makeContinuous, props.data, props.title, selectedTime]",[3081,3095],"[filterDate, selectedTime, timeSeries]"]