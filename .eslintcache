[{"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\index.js":"1","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\App.js":"2","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\reportWebVitals.js":"3","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Vaccine\\Vaccine.jsx":"4","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Map.jsx":"5","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\components.js":"6","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Time.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":134,"mtime":1610503131128,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2370,"mtime":1610794548772,"results":"12","hashOfConfig":"9"},{"size":8549,"mtime":1610934992382,"results":"13","hashOfConfig":"9"},{"size":4746,"mtime":1610923666397,"results":"14","hashOfConfig":"9"},{"size":4433,"mtime":1610925512793,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"vi5i8c",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\index.js",[],["32","33"],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\App.js",[],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\reportWebVitals.js",[],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Vaccine\\Vaccine.jsx",["34","35"],"import React, { useState, useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\nimport axios from 'axios';\r\nimport Map from '../Map/Map';\r\nimport states from '../Map/states.json';\r\n\r\nexport default function Vaccine() {\r\n\r\n    const url = \"https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/raw_data/vaccine_data_us_state_timeline.csv\";\r\n\r\n    const [allData, setAllData] = useState([]); //in time series\r\n    \r\n    function transformData(raw){\r\n        let results = [];\r\n        for (const [key, _] of Object.entries(raw.data[0])) {\r\n            let field = {};\r\n            field[\"title\"] = key;\r\n            field[\"data\"] = [];\r\n            results.push(field);\r\n        }\r\n        // filter empty data for each key\r\n\r\n        for (let i = 4; i < results.length; i++){\r\n            raw.data.forEach(field => {\r\n                if (field[results[i].title] !== \"\" && field[results[i].title] !== undefined\r\n                 && field[results[i].title] !== \" \"){\r\n                    results[i].data.push([field[\"date\"], field[\"stabbr\"], field[results[i].title]]);\r\n                }\r\n            })\r\n        }\r\n        let valid_results = results.slice(4);\r\n        console.log(valid_results);\r\n        getDataByState(valid_results);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchCSV(){\r\n            const csv = await axios.get(url).then(response => \r\n                Papa.parse(response.data,\r\n                          { header: true }));\r\n            transformData(csv);\r\n        }\r\n        fetchCSV();\r\n    }, []);\r\n\r\n    function filterState(raw, state){\r\n        let latest = [];\r\n        raw.forEach(row => {\r\n            let field = {};\r\n            field[\"title\"] = row.title;\r\n            field[\"data\"] = [];\r\n            latest.push(field);\r\n        });\r\n        latest.forEach((field, i) => {\r\n            field.data = raw[i].data.filter(data => data[1] === state);\r\n        });\r\n        return latest;\r\n    };\r\n\r\n    function getDataByState(data){\r\n        let latest_all = [];\r\n        states.forEach(state => {\r\n            latest_all.push({\"id\" : state.id, \"val\" : state.val, data : filterState(data, state.id)});\r\n        });\r\n        setAllData(latest_all);\r\n    }\r\n\r\n    console.log(allData);\r\n    return ( \r\n        <div style={{width: \"80%\"}}>\r\n        <Map data={allData}/>\r\n        </div>\r\n    );\r\n}","C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Map.jsx",["36","37"],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\components.js",[],"C:\\Users\\tanma\\Desktop\\covid\\vaccine\\src\\Map\\Time.jsx",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":15,"column":26,"nodeType":"44","messageId":"45","endLine":15,"endColumn":27},{"ruleId":"46","severity":1,"message":"47","line":44,"column":8,"nodeType":"48","endLine":44,"endColumn":10,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":75,"column":6,"nodeType":"48","endLine":75,"endColumn":18,"suggestions":"51"},{"ruleId":"46","severity":1,"message":"52","line":79,"column":6,"nodeType":"48","endLine":79,"endColumn":20,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'transformData'. Either include it or remove the dependency array.","ArrayExpression",["56"],"React Hook useEffect has a missing dependency: 'makeContinuous'. Either include it or remove the dependency array.",["57"],"React Hook useEffect has a missing dependency: 'timeSeries'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAllStates' needs the current value of 'timeSeries'.",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},{"desc":"63","fix":"64"},"Update the dependencies array to be: [transformData]",{"range":"65","text":"66"},"Update the dependencies array to be: [makeContinuous, props.data]",{"range":"67","text":"68"},"Update the dependencies array to be: [selectedTime, timeSeries]",{"range":"69","text":"70"},[1562,1564],"[transformData]",[2030,2042],"[makeContinuous, props.data]",[2131,2145],"[selectedTime, timeSeries]"]